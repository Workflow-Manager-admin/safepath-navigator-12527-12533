{"is_source_file": true, "format": "JavaScript", "description": "This file provides utility functions for geocoding addresses and reverse geocoding coordinates using the Google Maps Geocoding API. It includes functions for geocoding addresses with handling for incomplete or problematic formats, reverse geocoding coordinates to addresses, validating address formats, and formatting addresses for better geocoding results.", "external_files": ["https://maps.googleapis.com/maps/api/js"], "external_methods": ["window.google.maps.Geocoder", "window.google.maps.GeocoderStatus.OK"], "published": ["geocodeAddress", "reverseGeocode", "isValidAddressFormat", "formatAddressForGeocoding"], "classes": [], "methods": [{"name": "geocodeAddress", "description": "Converts an address string to geographic coordinates using Google Maps Geocoder, with fallback logic for specific address formats."}, {"name": "reverseGeocode", "description": "Converts geographic coordinates to an address string using Google Maps Reverse Geocoder."}, {"name": "isValidAddressFormat", "description": "Validates if an address string has a basic valid format."}, {"name": "formatAddressForGeocoding", "description": "Formats and standardizes address strings to improve geocoding accuracy."}], "calls": ["window.google.maps.Geocoder", "geocoder.geocode"], "search-terms": ["geocodeAddress", "reverseGeocode", "Google Maps Geocoding API", "address formatting", "fallback geocoding", "reverse geocoding", "address validation"], "state": 2, "file_id": 66, "knowledge_revision": 186, "git_revision": "bb509580548a3accb3d87430d948eb76285ff5e6", "revision_history": [{"178": "006479a452d4f95dae70ec12b1c8bc24ba559596"}, {"184": "3b48460b48e03d0ff3561faf2ec27a5863ffe4a6"}, {"186": "bb509580548a3accb3d87430d948eb76285ff5e6"}], "ctags": [{"_type": "tag", "name": "formatAddressForGeocoding", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const formatAddressForGeocoding = (address) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "formattedAddress", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^  let formattedAddress = address.trim();$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "geocodeAddress", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const geocodeAddress = async (address) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geocoder", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const geocoder = new window.google.maps.Geocoder();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidAddressFormat", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const isValidAddressFormat = (address) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "lat", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };$/", "language": "JavaScript", "kind": "property", "scope": "latlng", "scopeKind": "class"}, {"_type": "tag", "name": "latlng", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "lng", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };$/", "language": "JavaScript", "kind": "property", "scope": "latlng", "scopeKind": "class"}, {"_type": "tag", "name": "reverseGeocode", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const reverseGeocode = async (coordinates) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "hash": "069cfc66cbb512fea5d3faa2f97541af", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let formattedAddress = address.trim();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };", "scope": "latlng", "scopeKind": "class", "description": "unavailable"}]}