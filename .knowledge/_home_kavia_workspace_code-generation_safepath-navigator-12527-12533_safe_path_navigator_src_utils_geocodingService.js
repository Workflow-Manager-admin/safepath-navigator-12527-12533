{"is_source_file": true, "format": "JavaScript", "description": "This source file provides geocoding functionalities using Google Maps Geocoding API, including address to coordinates conversion, reverse geocoding, and address validation.", "external_files": ["https://developers.google.com/maps/documentation/javascript/overview"], "external_methods": ["window.google.maps.Geocoder", "window.google.maps.GeocoderStatus.OK"], "published": ["geocodeAddress", "reverseGeocode", "isValidAddressFormat"], "classes": [], "methods": [{"name": "geocodeAddress", "description": "Converts an address string to geographic coordinates (latitude and longitude) using Google Maps Geocoding API, with special handling for incomplete addresses and fallback mechanisms."}, {"name": "reverseGeocode", "description": "Converts geographic coordinates back into a human-readable address using Google Maps Geocoding API."}, {"name": "isValidAddressFormat", "description": "Performs a basic check to validate the format of an address string."}], "calls": ["window.google.maps.Geocoder()", "geocoder.geocode"], "search-terms": ["geocoding", "Google Maps API", "address to coordinates", "reverse geocoding", "address validation", "fallback geocoding", "Military Trail"], "state": 2, "file_id": 66, "knowledge_revision": 184, "git_revision": "3b48460b48e03d0ff3561faf2ec27a5863ffe4a6", "revision_history": [{"178": "006479a452d4f95dae70ec12b1c8bc24ba559596"}, {"184": "3b48460b48e03d0ff3561faf2ec27a5863ffe4a6"}], "ctags": [{"_type": "tag", "name": "formattedAddress", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^  let formattedAddress = address.trim();$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "geocodeAddress", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const geocodeAddress = async (address) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "geocoder", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const geocoder = new window.google.maps.Geocoder();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidAddressFormat", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const isValidAddressFormat = (address) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "lat", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };$/", "language": "JavaScript", "kind": "property", "scope": "latlng", "scopeKind": "class"}, {"_type": "tag", "name": "latlng", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };$/", "language": "JavaScript", "kind": "class"}, {"_type": "tag", "name": "lng", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^    const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };$/", "language": "JavaScript", "kind": "property", "scope": "latlng", "scopeKind": "class"}, {"_type": "tag", "name": "reverseGeocode", "path": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "pattern": "/^export const reverseGeocode = async (coordinates) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/code-generation/safepath-navigator-12527-12533/safe_path_navigator/src/utils/geocodingService.js", "hash": "ecb3727a54dfd85956923b06802c8e2e", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let formattedAddress = address.trim();", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "const latlng = { lat: parseFloat(coordinates.lat), lng: parseFloat(coordinates.lng) };", "scope": "latlng", "scopeKind": "class", "description": "unavailable"}]}